1. when to use memory and calldata in function parameters
  https://ethereum.stackexchange.com/questions/74442/when-should-i-use-calldata-and-when-should-i-use-memory
  

2. EVM understanding in series
   https://blog.qtum.org/diving-into-the-ethereum-vm-6e8d5d2f3c30
   
3. EVM and assembly language
   https://jeancvllr.medium.com/solidity-tutorial-all-about-assembly-5acdfefde05c

4. Assembly 
   https://ethereum.stackexchange.com/questions/3157/what-are-some-examples-of-how-inline-assembly-benefits-smart-contract-developmen
   
5. public and External functions difference
   https://ethereum.stackexchange.com/questions/19380/external-vs-public-best-practices?answertab=active#tab-top
   
6. SOlidity common attacks
   https://medium.com/shard-labs/smart-contract-attacks-and-prevention-with-openzeppelin-5ec575fb641a
   
7. What is Base58 encodeing/de-coding and why is it needed, because IPFS hash which is 46 bytes cannot be stored in one 32byte slot in solidity, so IPFS hash is a just base58 
   encoding of some 36byte number, while storing it in solidity as bytes32, first do base58 decoding the ipfs hash which will return the 36 bytes number, then removes first 2 
   bytes which is a metadata, then use that remaining 32 bytes ipfs hash to store it in solidity bytes32 slot. 
    https://learnmeabitcoin.com/technical/base58
    
8. How EOA addresses and Contract addresses are created. ?
   https://jeancvllr.medium.com/solidity-tutorial-all-about-addresses-ffcdf7efc4e7
